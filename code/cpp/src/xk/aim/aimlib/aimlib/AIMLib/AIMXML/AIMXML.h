/*
Copyright (c) 2008-2013, Northwestern University
All rights reserved.
 
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
 
  Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
 
  Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.
 
  Neither the name of the Northwestern University nor the names of its contributors
  may be used to endorse or promote products derived from this software
  without specific prior written permission.
 
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

////////////////////////////////////////////////////////////////////////
//
// AIMXML.h
//
// This file was generated by XMLSpy 2012r2sp1 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////

#ifndef _INCLUDED_AIMXML_H_
#define _INCLUDED_AIMXML_H_

#include "../Altova/xs-types.h"
#include "../AltovaXML/Node.h"
#include "AIMXML-typeinfo.h"

#define AIMXML_EXPORT	


namespace AIMXML
{

	class TypeBase
	{
	protected:
		xercesc::DOMNode* m_node;
	public:
		TypeBase(xercesc::DOMNode* const& node) : m_node(node) {}
		xercesc::DOMNode* GetNode() const { return m_node; }

		AIMXML_EXPORT xercesc::DOMNode* GetElementNth(const altova::MemberInfo* member, unsigned index);
		AIMXML_EXPORT xercesc::DOMNode* GetElementLast(const altova::MemberInfo* member);
		AIMXML_EXPORT unsigned CountElement(const altova::MemberInfo* member);
		AIMXML_EXPORT void RemoveElement(const altova::MemberInfo* member);
		AIMXML_EXPORT static int GetEnumerationIndex( const string_type sValue, const unsigned enumOffset, const unsigned enumCount);
		AIMXML_EXPORT static string_type GetEnumerationValue( const int index, const unsigned enumOffset, const unsigned enumCount);
	};

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	class MemberAttribute
	{
		TypeBase& m_owner;
	public:
		typedef const MemberType& argument_type;
		typedef MemberType return_type;

		MemberAttribute(TypeBase& owner) : m_owner(owner) {}
		void operator=(argument_type value);
		operator return_type();
		bool exists();
		void remove();
		int GetEnumerationValue();
		void SetEnumerationValue(const int index);
		altova::meta::Attribute info() const { return altova::meta::Attribute(members + MemberIndex); }
	};

	template <typename MemberType>
	class CastAs 
	{
	public:
		static MemberType Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember);
	};

	template <>
	inline bool CastAs<bool>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToBool(node, pMember);
	}

	template <>
	inline double CastAs<double>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToDouble(node, pMember);
	}

	template <>
	inline int CastAs<int>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToInt(node, pMember);
	}

	template <>
	inline unsigned CastAs<unsigned>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToUInt(node, pMember);
	}

	template <>
	inline __int64 CastAs<__int64>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToInt64(node, pMember);
	}

	template <>
	inline unsigned __int64 CastAs<unsigned __int64>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToUInt64(node, pMember);
	}

	template <>
	inline string_type CastAs<string_type>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToString(node, pMember);
	}

	template <>
	inline std::vector<unsigned char> CastAs<std::vector<unsigned char> >::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToBinary(node, pMember);
	}

	template <>
	inline altova::DateTime CastAs<altova::DateTime>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToDateTime(node, pMember);
	}

	template <>
	inline altova::Duration CastAs<altova::Duration>::Do(xercesc::DOMNode* const& node, const altova::MemberInfo* pMember)
	{
		return XercesTreeOperations::CastToDuration(node, pMember);
	}

	template <typename DataType>
	class Iterator : public DataType
	{
		XercesTreeOperations::MemberIterator m_it;
	public:
		Iterator(const XercesTreeOperations::MemberIterator& it) : DataType(0), m_it(it) { if (m_it) this->m_node = *m_it; }
		bool operator++() { if (++m_it) { this->m_node = *m_it; return true; } return false; }
		operator bool() const { return m_it; }		

		DataType& operator*() { return *this; }
		DataType* operator->() { return this; }
	};

	template <typename MemberType, unsigned MemberIndex>
	class MemberElement
	{
		TypeBase& m_owner;
	public:
		MemberElement(TypeBase& owner) : m_owner(owner) {}
		MemberType operator[](unsigned index);
		MemberType first();
		MemberType last();
		MemberType append();
		// VK: added
		xercesc::DOMNode* appendSpecial(unsigned DesiredMemberIndex);
		bool exists();
		unsigned count();
		void remove();
		void remove(unsigned index);
		altova::meta::Element info() const { return altova::meta::Element(members + MemberIndex); }

		Iterator<MemberType> all() { return XercesTreeOperations::GetElements(m_owner.GetNode(), members + MemberIndex); }
	};

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	void MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::operator=(argument_type value)
	{
		XercesTreeOperations::SetValue(m_owner.GetNode(), members + MemberIndex, value);
	}

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::operator typename MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::return_type()
	{
		xercesc::DOMNode* att = XercesTreeOperations::FindAttribute(m_owner.GetNode(), members + MemberIndex);
		if (!XercesTreeOperations::IsValid(att))
			throw altova::InvalidOperationException(_T("Cannot read value of non-existent attribute."));
		return CastAs<MemberType>::Do(att, members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	bool MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::exists()
	{
		xercesc::DOMNode* att = XercesTreeOperations::FindAttribute(m_owner.GetNode(), members + MemberIndex);
		return XercesTreeOperations::IsValid(att);
	}

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	void MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::remove()
	{
		XercesTreeOperations::RemoveAttribute(m_owner.GetNode(), members + MemberIndex);
	}
	
	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	int MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::GetEnumerationValue() {
		xercesc::DOMNode* att = XercesTreeOperations::FindAttribute(m_owner.GetNode(), members + MemberIndex);
		if (!XercesTreeOperations::IsValid(att))
			throw altova::InvalidOperationException(_T("Cannot read value of non-existent attribute."));
		string_type sValue = CastAs<string_type>::Do(att, members + MemberIndex);
		return TypeBase::GetEnumerationIndex( sValue, types[members[MemberIndex].DataType].Facets + EnumOffset, EnumCount);
	}

	template <typename MemberType, unsigned MemberIndex, unsigned EnumOffset, unsigned EnumCount>
	void MemberAttribute<MemberType, MemberIndex, EnumOffset, EnumCount>::SetEnumerationValue(const int index) 
	{
		XercesTreeOperations::SetValue(m_owner.GetNode(), members + MemberIndex, TypeBase::GetEnumerationValue(index, types[members[MemberIndex].DataType].Facets + EnumOffset, EnumCount) );
	}

	template <typename MemberType, unsigned MemberIndex>
	MemberType MemberElement<MemberType, MemberIndex>::operator[](unsigned index)
	{
		return m_owner.GetElementNth(members + MemberIndex, index);
	}

	template <typename MemberType, unsigned MemberIndex>
	MemberType MemberElement<MemberType, MemberIndex>::first()
	{
		return m_owner.GetElementNth(members + MemberIndex, 0);
	}

	template <typename MemberType, unsigned MemberIndex>
	MemberType MemberElement<MemberType, MemberIndex>::last()
	{
		return m_owner.GetElementLast(members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex>
	MemberType MemberElement<MemberType, MemberIndex>::append()
	{
		return XercesTreeOperations::AddElement(m_owner.GetNode(), members + MemberIndex);
	}

	// VK: added
	template <typename MemberType, unsigned MemberIndex>
	xercesc::DOMNode* MemberElement<MemberType, MemberIndex>::appendSpecial(unsigned DesiredMemberIndex)
	{
//		return XercesTreeOperations::AddElementSpecial(m_owner.GetNode(), members + MemberIndex, members + DesiredMemberIndex);
		return XercesTreeOperations::AddElementSpecial(m_owner.GetNode(), members + MemberIndex, types + DesiredMemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex>
	bool MemberElement<MemberType, MemberIndex>::exists()
	{
		return m_owner.GetElementNth(members + MemberIndex, 0) != 0;
	}

	template <typename MemberType, unsigned MemberIndex>
	unsigned MemberElement<MemberType, MemberIndex>::count()
	{
		return m_owner.CountElement(members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex>
	void MemberElement<MemberType, MemberIndex>::remove()
	{
		m_owner.RemoveElement(members + MemberIndex);
	}

	template <typename MemberType, unsigned MemberIndex>
	void MemberElement<MemberType, MemberIndex>::remove(unsigned index)
	{
		XercesTreeOperations::RemoveElement(m_owner.GetNode(), members + MemberIndex, index);
	}

}

namespace AIMXML
{
// Namespace: gme://caCORE.caCORE/4.4/edu.northwestern.radiology.AIM 
// SchemaPrefix: 
class CAdjudicationObservation;
class CAimVersion;
class CAlgorithm;
class CAnnotationCollection;
class CAnnotationEntity;
class CAnnotationEntityHasPerformedTaskContextEntityStatement;
class CAnnotationEntityHasPlannedTaskContextEntityStatement;
class CAnnotationOfAnnotation;
class CAnnotationOfAnnotationCollection;
class CAnnotationOfAnnotationHasAnnotationOfAnnotationStatement;
class CAnnotationOfAnnotationHasAnnotationRoleEntityStatement;
class CAnnotationOfAnnotationHasCalculationEntityStatement;
class CAnnotationOfAnnotationHasGeneralLesionObservationEntityStatement;
class CAnnotationOfAnnotationHasImageAnnotationStatement;
class CAnnotationOfAnnotationHasImagingObservationEntityStatement;
class CAnnotationOfAnnotationHasImagingPhysicalEntityStatement;
class CAnnotationOfAnnotationHasInferenceEntityStatement;
class CAnnotationOfAnnotationHasTimePointLesionObservationEntityStatement;
class CAnnotationOfAnnotationIsComparedWithAnnotationOfAnnotationStatement;
class CAnnotationOfAnnotationIsComparedWithImageAnnotationStatement;
class CAnnotationOfAnnotationStatement;
class CAnnotationRoleEntity;
class CAnnotationStatement;
class CAuditTrail;
class CCalculationData;
class CCalculationEntity;
class CCalculationEntityIsComparedWithCalculationEntityStatement;
class CCalculationEntityReferencesCalculationEntityStatement;
class CCalculationEntityUsesCalculationEntityStatement;
class CCalculationResult;
class CCalculationResultIdentifier;
class CCharacteristicQuantification;
class CCompactCalculationResult;
class CComparisonOperator;
class CCoordinate;
class CDicomImageReferenceEntity;
class CDicomImageReferenceEntityHasCalculationEntityStatement;
class CDicomImageReferenceEntityHasImagingObservationEntityStatement;
class CDicomImageReferenceEntityHasImagingPhysicalEntityStatement;
class CDicomSegmentationEntity;
class CDicomSegmentationEntityHasImagingObservationEntityStatement;
class CDimension;
class CEntity;
class CEquipment;
class CExtendedCalculationResult;
class CGeneralImage;
class CGeneralLesionObservationEntity;
class CGeneralLesionObservationEntityHasImagingPhysicalEntityStatement;
class CGeometricShapeEntity;
class CImage;
class CImageAnnotation;
class CImageAnnotationCollection;
class CImageAnnotationHasAnnotationRoleEntityStatement;
class CImageAnnotationHasCalculationEntityStatement;
class CImageAnnotationHasChildImageAnnotationStatement;
class CImageAnnotationHasDicomImageReferenceEntityStatement;
class CImageAnnotationHasDicomSegmentationEntityStatement;
class CImageAnnotationHasGeneralLesionObservationEntityStatement;
class CImageAnnotationHasImagingObservationEntityStatement;
class CImageAnnotationHasImagingPhysicalEntityStatement;
class CImageAnnotationHasInferenceEntityStatement;
class CImageAnnotationHasTextAnnotationEntityStatement;
class CImageAnnotationHasThreeDimensionGeometricShapeEntityStatement;
class CImageAnnotationHasTimePointLesionObservationEntityStatement;
class CImageAnnotationHasTwoDimensionGeometricShapeEntityStatement;
class CImageAnnotationHasUriImageReferenceEntityStatement;
class CImageAnnotationIsComparedWithAnnotationOfAnnotationStatement;
class CImageAnnotationIsComparedWithImageAnnotationStatement;
class CImageAnnotationStatement;
class CImagePlane;
class CImageReferenceEntity;
class CImageSeries;
class CImageStudy;
class CImagingObservationCharacteristic;
class CImagingObservationEntity;
class CImagingObservationEntityHasCalculationEntityStatement;
class CImagingObservationEntityIsFoundInImagingPhysicalEntityStatement;
class CImagingObservationEntityIsIdentifiedByTextAnnotationEntityStatement;
class CImagingObservationEntityIsIdentifiedByThreeDimensionGeometricShapeEntityStatement;
class CImagingObservationEntityIsIdentifiedByTwoDimensionGeometricShapeEntityStatement;
class CImagingPhysicalEntity;
class CImagingPhysicalEntityCharacteristic;
class CImagingPhysicalEntityHasCalculationEntityStatement;
class CImagingPhysicalEntityHasImagingObservationEntityStatement;
class CImagingPhysicalEntityHasTextAnnotationEntityStatement;
class CImagingPhysicalEntityHasThreeDimensionGeometricShapeEntityStatement;
class CImagingPhysicalEntityHasTwoDimensionGeometricShapeEntityStatement;
class CInferenceEntity;
class CInterval;
class CLesionObservationEntity;
class CMarkupEntity;
class CNonQuantifiable;
class CNumerical;
class CParameter;
class CPerson;
class CQuantile;
class CReferencedDicomObject;
class CScale;
class CScaleType;
class CSegmentationEntity;
class CTaskContextEntity;
class CTextAnnotationEntity;
class CThreeDimensionEllipse;
class CThreeDimensionEllipsoid;
class CThreeDimensionGeometricShapeEntity;
class CThreeDimensionGeometricShapeEntityExcludesThreeDimensionGeometricShapeEntityStatement;
class CThreeDimensionGeometricShapeEntityIsComprisedOfThreeDimensionGeometricShapeEntityStatement;
class CThreeDimensionMultiPoint;
class CThreeDimensionPoint;
class CThreeDimensionPolygon;
class CThreeDimensionPolyline;
class CThreeDimensionSpatialCoordinate;
class CTimePointLesionObservationEntity;
class CTimePointLesionObservationEntityHasImagingPhysicalEntityStatement;
class CTwoDimensionCircle;
class CTwoDimensionEllipse;
class CTwoDimensionGeometricShapeEntity;
class CTwoDimensionGeometricShapeEntityExcludesTwoDimensionGeometricShapeEntityStatement;
class CTwoDimensionGeometricShapeEntityIsComprisedOfTwoDimensionGeometricShapeEntityStatement;
class CTwoDimensionMultiPoint;
class CTwoDimensionPoint;
class CTwoDimensionPolyline;
class CTwoDimensionSpatialCoordinate;
class CUriImageReferenceEntity;
class CUriImageReferenceEntityHasCalculationEntityStatement;
class CUriImageReferenceEntityHasImagingObservationEntityStatement;
class CUriImageReferenceEntityHasImagingPhysicalEntityStatement;
class CUser;
class CAIMXML;
class CbrType;
class CcaptionType;
class ClinkHtmlType;
class CfootnoteType;
class CfootnoteRefType;
class CcolType;
class CalignType;
class CvalignType;
class CcolgroupType;
class CalignType2;
class CvalignType2;
class CcontentType;
class CrevisedType;
class CrenderMultiMediaType;
class CitemType;
class CparagraphType;
class ClistType;
class CtableType;
class CtbodyType;
class CalignType3;
class CvalignType3;
class CtrType;
class CtdType;
class CscopeType;
class CalignType4;
class CvalignType4;
class CtfootType;
class CalignType5;
class CvalignType5;
class CthType;
class CscopeType2;
class CalignType6;
class CvalignType6;
class CtheadType;
class CalignType7;
class CvalignType7;
class CparameterCollectionType;
class CauditTrailCollectionType;
class CimagingPhysicalEntityCollectionType;
class CcalculationEntityCollectionType;
class CinferenceEntityCollectionType;
class CannotationRoleEntityCollectionType;
class ClesionObservationEntityCollectionType;
class CimagingObservationEntityCollectionType;
class CtaskContextEntityCollectionType;
class CannotationOfAnnotationStatementCollectionType;
class CannotationOfAnnotationsType;
class CcoordinateCollectionType;
class CcalculationResultCollectionType;
class CdimensionCollectionType;
class CcalculationDataCollectionType;
class CsegmentationEntityCollectionType;
class CmarkupEntityCollectionType;
class CimageAnnotationStatementCollectionType;
class CimageReferenceEntityCollectionType;
class CimageAnnotationsType;
class CimageCollectionType;
class CreferencedDicomObjectCollectionType;
class CcharacteristicQuantificationCollectionType;
class CimagingObservationCharacteristicCollectionType;
class CimagingPhysicalEntityCharacteristicCollectionType;
class CimagingObservationCharacteristicCollectionType2;
class CcharacteristicQuantificationCollectionType2;
class CtaskContextEntityCollectionType2;
class CthreeDimensionSpatialCoordinateCollectionType;
class CtwoDimensionSpatialCoordinateCollectionType;
class ClistTypeType;
class CframeType;
class CrulesType;
class CalignType8;
class CvalignType8;
// Namespace: http://www.w3.org/2001/XMLSchema 
// SchemaPrefix: xs

namespace xs
{	
class CENTITIES;
class CENTITY;
class CID;
class CIDREF;
class CIDREFS;
class CNCName;
class CNMTOKEN;
class CNMTOKENS;
class CNOTATION;
class CName;
class CQName;
class CanySimpleType;
class CanyType;
class CanyURI;
class Cbase64Binary;
class Cboolean;
class Cbyte;
class Cdate;
class CdateTime;
class Cdecimal;
class Cdouble;
class Cduration;
class Cfloat;
class CgDay;
class CgMonth;
class CgMonthDay;
class CgYear;
class CgYearMonth;
class ChexBinary;
class Cint;
class Cinteger;
class Clanguage;
class Clong;
class CnegativeInteger;
class CnonNegativeInteger;
class CnonPositiveInteger;
class CnormalizedString;
class CpositiveInteger;
class Cshort;
class Cstring;
class Ctime;
class Ctoken;
class CunsignedByte;
class CunsignedInt;
class CunsignedLong;
class CunsignedShort;
class CstringType;
class Cbase64BinaryType;

} // namespace xs

// Namespace: uri:iso.org:21090 
// SchemaPrefix: iso

namespace iso
{	
class CAD;
class CADXP;
class CANY;
class CAddressPartType;
class CBAG_AD;
class CBAG_BL;
class CBAG_BL_NonNull;
class CBAG_CD;
class CBAG_CD_CE;
class CBAG_CD_CE_None;
class CBAG_CD_CV;
class CBAG_CO;
class CBAG_CS;
class CBAG_ED;
class CBAG_ED_Doc;
class CBAG_ED_Doc_Inline;
class CBAG_ED_Doc_Ref;
class CBAG_ED_Image;
class CBAG_ED_Narrative;
class CBAG_ED_Signature;
class CBAG_ED_Text;
class CBAG_EN;
class CBAG_EN_ON;
class CBAG_EN_PN;
class CBAG_EN_TN;
class CBAG_II;
class CBAG_INT;
class CBAG_INT_NonNeg;
class CBAG_INT_Positive;
class CBAG_MO;
class CBAG_PQ;
class CBAG_PQ_Time;
class CBAG_REAL;
class CBAG_RTO;
class CBAG_SC;
class CBAG_SC_NT;
class CBAG_ST;
class CBAG_ST_NT;
class CBAG_TEL;
class CBAG_TEL_Email;
class CBAG_TEL_Person;
class CBAG_TEL_Phone;
class CBAG_TEL_Url;
class CBAG_TS;
class CBAG_TS_Birth;
class CBAG_TS_Date;
class CBAG_TS_Date_Full;
class CBAG_TS_DateTime;
class CBAG_TS_DateTime_Full;
class CBL;
class CBL_NonNull;
class CCD;
class CCD_CE;
class CCD_CE_None;
class CCD_CV;
class CCDGroup;
class CCO;
class CCOLL_AD;
class CCOLL_BL;
class CCOLL_BL_NonNull;
class CCOLL_CD;
class CCOLL_CD_CE;
class CCOLL_CD_CE_None;
class CCOLL_CD_CV;
class CCOLL_CO;
class CCOLL_CS;
class CCOLL_ED;
class CCOLL_ED_Doc;
class CCOLL_ED_Doc_Inline;
class CCOLL_ED_Doc_Ref;
class CCOLL_ED_Image;
class CCOLL_ED_Narrative;
class CCOLL_ED_Signature;
class CCOLL_ED_Text;
class CCOLL_EN;
class CCOLL_EN_ON;
class CCOLL_EN_PN;
class CCOLL_EN_TN;
class CCOLL_II;
class CCOLL_INT;
class CCOLL_INT_NonNeg;
class CCOLL_INT_Positive;
class CCOLL_MO;
class CCOLL_PQ;
class CCOLL_PQ_Time;
class CCOLL_REAL;
class CCOLL_RTO;
class CCOLL_SC;
class CCOLL_SC_NT;
class CCOLL_ST;
class CCOLL_ST_NT;
class CCOLL_TEL;
class CCOLL_TEL_Email;
class CCOLL_TEL_Person;
class CCOLL_TEL_Phone;
class CCOLL_TEL_Url;
class CCOLL_TS;
class CCOLL_TS_Birth;
class CCOLL_TS_Date;
class CCOLL_TS_Date_Full;
class CCOLL_TS_DateTime;
class CCOLL_TS_DateTime_Full;
class CCR;
class CCS;
class CCalendarCycle;
class CCode;
class CCodingRationale;
class CCompression;
class CDSET_AD;
class CDSET_BL;
class CDSET_BL_NonNull;
class CDSET_CD;
class CDSET_CD_CE;
class CDSET_CD_CE_None;
class CDSET_CD_CV;
class CDSET_CO;
class CDSET_CS;
class CDSET_ED;
class CDSET_ED_Doc;
class CDSET_ED_Doc_Inline;
class CDSET_ED_Doc_Ref;
class CDSET_ED_Image;
class CDSET_ED_Narrative;
class CDSET_ED_Signature;
class CDSET_ED_Text;
class CDSET_EN;
class CDSET_EN_ON;
class CDSET_EN_PN;
class CDSET_EN_TN;
class CDSET_II;
class CDSET_INT;
class CDSET_INT_NonNeg;
class CDSET_INT_Positive;
class CDSET_MO;
class CDSET_PQ;
class CDSET_PQ_Time;
class CDSET_REAL;
class CDSET_RTO;
class CDSET_SC;
class CDSET_SC_NT;
class CDSET_ST;
class CDSET_ST_NT;
class CDSET_TEL;
class CDSET_TEL_Email;
class CDSET_TEL_Person;
class CDSET_TEL_Phone;
class CDSET_TEL_Url;
class CDSET_TS;
class CDSET_TS_Birth;
class CDSET_TS_Date;
class CDSET_TS_Date_Full;
class CDSET_TS_DateTime;
class CDSET_TS_DateTime_Full;
class CED;
class CED_Doc;
class CED_Doc_Inline;
class CED_Doc_Ref;
class CED_Image;
class CED_Narrative;
class CED_Signature;
class CED_Text;
class CEIVL_TS;
class CEIVL_TS_Birth;
class CEIVL_TS_Date;
class CEIVL_TS_Date_Full;
class CEIVL_TS_DateTime;
class CEIVL_TS_DateTime_Full;
class CEN;
class CEN_ON;
class CEN_PN;
class CEN_TN;
class CENXP;
class CEntityNamePartQualifier;
class CEntityNamePartType;
class CEntityNameUse;
class CGLIST_CO;
class CGLIST_INT;
class CGLIST_INT_NonNeg;
class CGLIST_INT_Positive;
class CGLIST_MO;
class CGLIST_PQ;
class CGLIST_PQ_Time;
class CGLIST_REAL;
class CGLIST_RTO;
class CGLIST_TS;
class CGLIST_TS_Birth;
class CGLIST_TS_Date;
class CGLIST_TS_Date_Full;
class CGLIST_TS_DateTime;
class CGLIST_TS_DateTime_Full;
class CHIST_AD;
class CHIST_BL;
class CHIST_BL_NonNull;
class CHIST_CD;
class CHIST_CD_CE;
class CHIST_CD_CE_None;
class CHIST_CD_CV;
class CHIST_CO;
class CHIST_CS;
class CHIST_ED;
class CHIST_ED_Doc;
class CHIST_ED_Doc_Inline;
class CHIST_ED_Doc_Ref;
class CHIST_ED_Image;
class CHIST_ED_Narrative;
class CHIST_ED_Signature;
class CHIST_ED_Text;
class CHIST_EN;
class CHIST_EN_ON;
class CHIST_EN_PN;
class CHIST_EN_TN;
class CHIST_II;
class CHIST_INT;
class CHIST_INT_NonNeg;
class CHIST_INT_Positive;
class CHIST_MO;
class CHIST_PQ;
class CHIST_PQ_Time;
class CHIST_REAL;
class CHIST_RTO;
class CHIST_SC;
class CHIST_SC_NT;
class CHIST_ST;
class CHIST_ST_NT;
class CHIST_TEL;
class CHIST_TEL_Email;
class CHIST_TEL_Person;
class CHIST_TEL_Phone;
class CHIST_TEL_Url;
class CHIST_TS;
class CHIST_TS_Birth;
class CHIST_TS_Date;
class CHIST_TS_Date_Full;
class CHIST_TS_DateTime;
class CHIST_TS_DateTime_Full;
class CHXIT;
class CII;
class CINT;
class CINT_NonNeg;
class CINT_Positive;
class CIVL_High_CO;
class CIVL_High_INT;
class CIVL_High_INT_NonNeg;
class CIVL_High_INT_Positive;
class CIVL_High_MO;
class CIVL_High_PQ;
class CIVL_High_PQ_Time;
class CIVL_High_REAL;
class CIVL_High_RTO;
class CIVL_High_TS;
class CIVL_High_TS_Birth;
class CIVL_High_TS_Date;
class CIVL_High_TS_Date_Full;
class CIVL_High_TS_DateTime;
class CIVL_High_TS_DateTime_Full;
class CIVL_Low_CO;
class CIVL_Low_INT;
class CIVL_Low_INT_NonNeg;
class CIVL_Low_INT_Positive;
class CIVL_Low_MO;
class CIVL_Low_PQ;
class CIVL_Low_PQ_Time;
class CIVL_Low_REAL;
class CIVL_Low_RTO;
class CIVL_Low_TS;
class CIVL_Low_TS_Birth;
class CIVL_Low_TS_Date;
class CIVL_Low_TS_Date_Full;
class CIVL_Low_TS_DateTime;
class CIVL_Low_TS_DateTime_Full;
class CIVL_Width_CO;
class CIVL_Width_INT;
class CIVL_Width_INT_NonNeg;
class CIVL_Width_INT_Positive;
class CIVL_Width_MO;
class CIVL_Width_PQ;
class CIVL_Width_PQ_Time;
class CIVL_Width_REAL;
class CIVL_Width_RTO;
class CIVL_Width_TS;
class CIVL_Width_TS_Birth;
class CIVL_Width_TS_Date;
class CIVL_Width_TS_Date_Full;
class CIVL_Width_TS_DateTime;
class CIVL_Width_TS_DateTime_Full;
class CIVL_CO;
class CIVL_INT;
class CIVL_INT_NonNeg;
class CIVL_INT_Positive;
class CIVL_MO;
class CIVL_PQ;
class CIVL_PQ_Time;
class CIVL_REAL;
class CIVL_RTO;
class CIVL_TS;
class CIVL_TS_Birth;
class CIVL_TS_Date;
class CIVL_TS_Date_Full;
class CIVL_TS_DateTime;
class CIVL_TS_DateTime_Full;
class CIdentifierReliability;
class CIdentifierScope;
class CIntegrityCheckAlgorithm;
class CLIST_AD;
class CLIST_BL;
class CLIST_BL_NonNull;
class CLIST_CD;
class CLIST_CD_CE;
class CLIST_CD_CE_None;
class CLIST_CD_CV;
class CLIST_CO;
class CLIST_CS;
class CLIST_ED;
class CLIST_ED_Doc;
class CLIST_ED_Doc_Inline;
class CLIST_ED_Doc_Ref;
class CLIST_ED_Image;
class CLIST_ED_Narrative;
class CLIST_ED_Signature;
class CLIST_ED_Text;
class CLIST_EN;
class CLIST_EN_ON;
class CLIST_EN_PN;
class CLIST_EN_TN;
class CLIST_II;
class CLIST_INT;
class CLIST_INT_NonNeg;
class CLIST_INT_Positive;
class CLIST_MO;
class CLIST_PQ;
class CLIST_PQ_Time;
class CLIST_REAL;
class CLIST_RTO;
class CLIST_SC;
class CLIST_SC_NT;
class CLIST_ST;
class CLIST_ST_NT;
class CLIST_TEL;
class CLIST_TEL_Email;
class CLIST_TEL_Person;
class CLIST_TEL_Phone;
class CLIST_TEL_Url;
class CLIST_TS;
class CLIST_TS_Birth;
class CLIST_TS_Date;
class CLIST_TS_Date_Full;
class CLIST_TS_DateTime;
class CLIST_TS_DateTime_Full;
class CMO;
class CNPPD_AD;
class CNPPD_BL;
class CNPPD_BL_NonNull;
class CNPPD_CD;
class CNPPD_CD_CE;
class CNPPD_CD_CE_None;
class CNPPD_CD_CV;
class CNPPD_CO;
class CNPPD_CS;
class CNPPD_ED;
class CNPPD_ED_Doc;
class CNPPD_ED_Doc_Inline;
class CNPPD_ED_Doc_Ref;
class CNPPD_ED_Image;
class CNPPD_ED_Narrative;
class CNPPD_ED_Signature;
class CNPPD_ED_Text;
class CNPPD_EN;
class CNPPD_EN_ON;
class CNPPD_EN_PN;
class CNPPD_EN_TN;
class CNPPD_II;
class CNPPD_INT;
class CNPPD_INT_NonNeg;
class CNPPD_INT_Positive;
class CNPPD_MO;
class CNPPD_PQ;
class CNPPD_PQ_Time;
class CNPPD_REAL;
class CNPPD_RTO;
class CNPPD_SC;
class CNPPD_SC_NT;
class CNPPD_ST;
class CNPPD_ST_NT;
class CNPPD_TEL;
class CNPPD_TEL_Email;
class CNPPD_TEL_Person;
class CNPPD_TEL_Phone;
class CNPPD_TEL_Url;
class CNPPD_TS;
class CNPPD_TS_Birth;
class CNPPD_TS_Date;
class CNPPD_TS_Date_Full;
class CNPPD_TS_DateTime;
class CNPPD_TS_DateTime_Full;
class CNarrative;
class CNullFlavor;
class CPIVL_TS;
class CPIVL_TS_Birth;
class CPIVL_TS_Date;
class CPIVL_TS_Date_Full;
class CPIVL_TS_DateTime;
class CPIVL_TS_DateTime_Full;
class CPQ;
class CPQ_Time;
class CPQR;
class CPostalAddressUse;
class CQSD_CO;
class CQSD_INT;
class CQSD_INT_NonNeg;
class CQSD_INT_Positive;
class CQSD_MO;
class CQSD_PQ;
class CQSD_PQ_Time;
class CQSD_REAL;
class CQSD_RTO;
class CQSD_TS;
class CQSD_TS_Birth;
class CQSD_TS_Date;
class CQSD_TS_Date_Full;
class CQSD_TS_DateTime;
class CQSD_TS_DateTime_Full;
class CQSET_BoundedPIVL;
class CQSET_CO;
class CQSET_INT;
class CQSET_INT_NonNeg;
class CQSET_INT_Positive;
class CQSET_MO;
class CQSET_PQ;
class CQSET_PQ_Time;
class CQSET_REAL;
class CQSET_RTO;
class CQSET_TS;
class CQSET_TS_Birth;
class CQSET_TS_Date;
class CQSET_TS_Date_Full;
class CQSET_TS_DateTime;
class CQSET_TS_DateTime_Full;
class CQSI_CO;
class CQSI_INT;
class CQSI_INT_NonNeg;
class CQSI_INT_Positive;
class CQSI_MO;
class CQSI_PQ;
class CQSI_PQ_Time;
class CQSI_REAL;
class CQSI_RTO;
class CQSI_TS;
class CQSI_TS_Birth;
class CQSI_TS_Date;
class CQSI_TS_Date_Full;
class CQSI_TS_DateTime;
class CQSI_TS_DateTime_Full;
class CQSP_CO;
class CQSP_INT;
class CQSP_INT_NonNeg;
class CQSP_INT_Positive;
class CQSP_MO;
class CQSP_PQ;
class CQSP_PQ_Time;
class CQSP_REAL;
class CQSP_RTO;
class CQSP_TS;
class CQSP_TS_Birth;
class CQSP_TS_Date;
class CQSP_TS_Date_Full;
class CQSP_TS_DateTime;
class CQSP_TS_DateTime_Full;
class CQSS_CO;
class CQSS_INT;
class CQSS_INT_NonNeg;
class CQSS_INT_Positive;
class CQSS_MO;
class CQSS_PQ;
class CQSS_PQ_Time;
class CQSS_REAL;
class CQSS_RTO;
class CQSS_TS;
class CQSS_TS_Birth;
class CQSS_TS_Date;
class CQSS_TS_Date_Full;
class CQSS_TS_DateTime;
class CQSS_TS_DateTime_Full;
class CQSU_CO;
class CQSU_INT;
class CQSU_INT_NonNeg;
class CQSU_INT_Positive;
class CQSU_MO;
class CQSU_PQ;
class CQSU_PQ_Time;
class CQSU_REAL;
class CQSU_RTO;
class CQSU_TS;
class CQSU_TS_Birth;
class CQSU_TS_Date;
class CQSU_TS_Date_Full;
class CQSU_TS_DateTime;
class CQSU_TS_DateTime_Full;
class CQTY;
class CREAL;
class CRTO;
class CSC;
class CSC_NT;
class CSLIST_CO;
class CSLIST_INT;
class CSLIST_INT_NonNeg;
class CSLIST_INT_Positive;
class CSLIST_MO;
class CSLIST_PQ;
class CSLIST_PQ_Time;
class CSLIST_REAL;
class CSLIST_RTO;
class CSLIST_TS;
class CSLIST_TS_Birth;
class CSLIST_TS_Date;
class CSLIST_TS_Date_Full;
class CSLIST_TS_DateTime;
class CSLIST_TS_DateTime_Full;
class CST;
class CST_NT;
class CTEL;
class CTEL_Email;
class CTEL_Person;
class CTEL_Phone;
class CTEL_Url;
class CTS;
class CTS_Birth;
class CTS_Date;
class CTS_Date_Full;
class CTS_DateTime;
class CTS_DateTime_Full;
class CTelecommunicationAddressUse;
class CTimingEvent;
class CURL;
class CUVP_AD;
class CUVP_BL;
class CUVP_BL_NonNull;
class CUVP_CD;
class CUVP_CD_CE;
class CUVP_CD_CE_None;
class CUVP_CD_CV;
class CUVP_CO;
class CUVP_CS;
class CUVP_ED;
class CUVP_ED_Doc;
class CUVP_ED_Doc_Inline;
class CUVP_ED_Doc_Ref;
class CUVP_ED_Image;
class CUVP_ED_Narrative;
class CUVP_ED_Signature;
class CUVP_ED_Text;
class CUVP_EN;
class CUVP_EN_ON;
class CUVP_EN_PN;
class CUVP_EN_TN;
class CUVP_II;
class CUVP_INT;
class CUVP_INT_NonNeg;
class CUVP_INT_Positive;
class CUVP_MO;
class CUVP_PQ;
class CUVP_PQ_Time;
class CUVP_REAL;
class CUVP_RTO;
class CUVP_SC;
class CUVP_SC_NT;
class CUVP_ST;
class CUVP_ST_NT;
class CUVP_TEL;
class CUVP_TEL_Email;
class CUVP_TEL_Person;
class CUVP_TEL_Phone;
class CUVP_TEL_Url;
class CUVP_TS;
class CUVP_TS_Birth;
class CUVP_TS_Date;
class CUVP_TS_Date_Full;
class CUVP_TS_DateTime;
class CUVP_TS_DateTime_Full;
class CUid;
class CUncertaintyType;
class CUpdateMode;
class CUri;
class CXReference;
class Cset_CodingRationale;
class Cset_EntityNamePartQualifier;
class Cset_EntityNameUse;
class Cset_PostalAddressUse;
class Cset_TelecommunicationAddressUse;

} // namespace iso


}

// include individual types

// namespace "gme://caCORE.caCORE/4.4/edu.northwestern.radiology.AIM"
#include "type_.CAdjudicationObservation.h"
#include "type_.CAimVersion.h"
#include "type_.CAlgorithm.h"
#include "type_.CAnnotationCollection.h"
#include "type_.CAnnotationEntity.h"
#include "type_.CAnnotationEntityHasPerformedTaskContextEntityStatement.h"
#include "type_.CAnnotationEntityHasPlannedTaskContextEntityStatement.h"
#include "type_.CAnnotationOfAnnotation.h"
#include "type_.CAnnotationOfAnnotationCollection.h"
#include "type_.CAnnotationOfAnnotationHasAnnotationOfAnnotationStatement.h"
#include "type_.CAnnotationOfAnnotationHasAnnotationRoleEntityStatement.h"
#include "type_.CAnnotationOfAnnotationHasCalculationEntityStatement.h"
#include "type_.CAnnotationOfAnnotationHasGeneralLesionObservationEntityStatement.h"
#include "type_.CAnnotationOfAnnotationHasImageAnnotationStatement.h"
#include "type_.CAnnotationOfAnnotationHasImagingObservationEntityStatement.h"
#include "type_.CAnnotationOfAnnotationHasImagingPhysicalEntityStatement.h"
#include "type_.CAnnotationOfAnnotationHasInferenceEntityStatement.h"
#include "type_.CAnnotationOfAnnotationHasTimePointLesionObservationEntityStatement.h"
#include "type_.CAnnotationOfAnnotationIsComparedWithAnnotationOfAnnotationStatement.h"
#include "type_.CAnnotationOfAnnotationIsComparedWithImageAnnotationStatement.h"
#include "type_.CAnnotationOfAnnotationStatement.h"
#include "type_.CAnnotationRoleEntity.h"
#include "type_.CAnnotationStatement.h"
#include "type_.CAuditTrail.h"
#include "type_.CCalculationData.h"
#include "type_.CCalculationEntity.h"
#include "type_.CCalculationEntityIsComparedWithCalculationEntityStatement.h"
#include "type_.CCalculationEntityReferencesCalculationEntityStatement.h"
#include "type_.CCalculationEntityUsesCalculationEntityStatement.h"
#include "type_.CCalculationResult.h"
#include "type_.CCalculationResultIdentifier.h"
#include "type_.CCharacteristicQuantification.h"
#include "type_.CCompactCalculationResult.h"
#include "type_.CComparisonOperator.h"
#include "type_.CCoordinate.h"
#include "type_.CDicomImageReferenceEntity.h"
#include "type_.CDicomImageReferenceEntityHasCalculationEntityStatement.h"
#include "type_.CDicomImageReferenceEntityHasImagingObservationEntityStatement.h"
#include "type_.CDicomImageReferenceEntityHasImagingPhysicalEntityStatement.h"
#include "type_.CDicomSegmentationEntity.h"
#include "type_.CDicomSegmentationEntityHasImagingObservationEntityStatement.h"
#include "type_.CDimension.h"
#include "type_.CEntity.h"
#include "type_.CEquipment.h"
#include "type_.CExtendedCalculationResult.h"
#include "type_.CGeneralImage.h"
#include "type_.CGeneralLesionObservationEntity.h"
#include "type_.CGeneralLesionObservationEntityHasImagingPhysicalEntityStatement.h"
#include "type_.CGeometricShapeEntity.h"
#include "type_.CImage.h"
#include "type_.CImageAnnotation.h"
#include "type_.CImageAnnotationCollection.h"
#include "type_.CImageAnnotationHasAnnotationRoleEntityStatement.h"
#include "type_.CImageAnnotationHasCalculationEntityStatement.h"
#include "type_.CImageAnnotationHasChildImageAnnotationStatement.h"
#include "type_.CImageAnnotationHasDicomImageReferenceEntityStatement.h"
#include "type_.CImageAnnotationHasDicomSegmentationEntityStatement.h"
#include "type_.CImageAnnotationHasGeneralLesionObservationEntityStatement.h"
#include "type_.CImageAnnotationHasImagingObservationEntityStatement.h"
#include "type_.CImageAnnotationHasImagingPhysicalEntityStatement.h"
#include "type_.CImageAnnotationHasInferenceEntityStatement.h"
#include "type_.CImageAnnotationHasTextAnnotationEntityStatement.h"
#include "type_.CImageAnnotationHasThreeDimensionGeometricShapeEntityStatement.h"
#include "type_.CImageAnnotationHasTimePointLesionObservationEntityStatement.h"
#include "type_.CImageAnnotationHasTwoDimensionGeometricShapeEntityStatement.h"
#include "type_.CImageAnnotationHasUriImageReferenceEntityStatement.h"
#include "type_.CImageAnnotationIsComparedWithAnnotationOfAnnotationStatement.h"
#include "type_.CImageAnnotationIsComparedWithImageAnnotationStatement.h"
#include "type_.CImageAnnotationStatement.h"
#include "type_.CImagePlane.h"
#include "type_.CImageReferenceEntity.h"
#include "type_.CImageSeries.h"
#include "type_.CImageStudy.h"
#include "type_.CImagingObservationCharacteristic.h"
#include "type_.CImagingObservationEntity.h"
#include "type_.CImagingObservationEntityHasCalculationEntityStatement.h"
#include "type_.CImagingObservationEntityIsFoundInImagingPhysicalEntityStatement.h"
#include "type_.CImagingObservationEntityIsIdentifiedByTextAnnotationEntityStatement.h"
#include "type_.CImagingObservationEntityIsIdentifiedByThreeDimensionGeometricShapeEntityStatement.h"
#include "type_.CImagingObservationEntityIsIdentifiedByTwoDimensionGeometricShapeEntityStatement.h"
#include "type_.CImagingPhysicalEntity.h"
#include "type_.CImagingPhysicalEntityCharacteristic.h"
#include "type_.CImagingPhysicalEntityHasCalculationEntityStatement.h"
#include "type_.CImagingPhysicalEntityHasImagingObservationEntityStatement.h"
#include "type_.CImagingPhysicalEntityHasTextAnnotationEntityStatement.h"
#include "type_.CImagingPhysicalEntityHasThreeDimensionGeometricShapeEntityStatement.h"
#include "type_.CImagingPhysicalEntityHasTwoDimensionGeometricShapeEntityStatement.h"
#include "type_.CInferenceEntity.h"
#include "type_.CInterval.h"
#include "type_.CLesionObservationEntity.h"
#include "type_.CMarkupEntity.h"
#include "type_.CNonQuantifiable.h"
#include "type_.CNumerical.h"
#include "type_.CParameter.h"
#include "type_.CPerson.h"
#include "type_.CQuantile.h"
#include "type_.CReferencedDicomObject.h"
#include "type_.CScale.h"
#include "type_.CScaleType.h"
#include "type_.CSegmentationEntity.h"
#include "type_.CTaskContextEntity.h"
#include "type_.CTextAnnotationEntity.h"
#include "type_.CThreeDimensionEllipse.h"
#include "type_.CThreeDimensionEllipsoid.h"
#include "type_.CThreeDimensionGeometricShapeEntity.h"
#include "type_.CThreeDimensionGeometricShapeEntityExcludesThreeDimensionGeometricShapeEntityStatement.h"
#include "type_.CThreeDimensionGeometricShapeEntityIsComprisedOfThreeDimensionGeometricShapeEntityStatement.h"
#include "type_.CThreeDimensionMultiPoint.h"
#include "type_.CThreeDimensionPoint.h"
#include "type_.CThreeDimensionPolygon.h"
#include "type_.CThreeDimensionPolyline.h"
#include "type_.CThreeDimensionSpatialCoordinate.h"
#include "type_.CTimePointLesionObservationEntity.h"
#include "type_.CTimePointLesionObservationEntityHasImagingPhysicalEntityStatement.h"
#include "type_.CTwoDimensionCircle.h"
#include "type_.CTwoDimensionEllipse.h"
#include "type_.CTwoDimensionGeometricShapeEntity.h"
#include "type_.CTwoDimensionGeometricShapeEntityExcludesTwoDimensionGeometricShapeEntityStatement.h"
#include "type_.CTwoDimensionGeometricShapeEntityIsComprisedOfTwoDimensionGeometricShapeEntityStatement.h"
#include "type_.CTwoDimensionMultiPoint.h"
#include "type_.CTwoDimensionPoint.h"
#include "type_.CTwoDimensionPolyline.h"
#include "type_.CTwoDimensionSpatialCoordinate.h"
#include "type_.CUriImageReferenceEntity.h"
#include "type_.CUriImageReferenceEntityHasCalculationEntityStatement.h"
#include "type_.CUriImageReferenceEntityHasImagingObservationEntityStatement.h"
#include "type_.CUriImageReferenceEntityHasImagingPhysicalEntityStatement.h"
#include "type_.CUser.h"
#include "type_.CAIMXML.h"
#include "type_.CbrType.h"
#include "type_.CcaptionType.h"
#include "type_.ClinkHtmlType.h"
#include "type_.CfootnoteType.h"
#include "type_.CfootnoteRefType.h"
#include "type_.CcolType.h"
#include "type_.CalignType.h"
#include "type_.CvalignType.h"
#include "type_.CcolgroupType.h"
#include "type_.CalignType2.h"
#include "type_.CvalignType2.h"
#include "type_.CcontentType.h"
#include "type_.CrevisedType.h"
#include "type_.CrenderMultiMediaType.h"
#include "type_.CitemType.h"
#include "type_.CparagraphType.h"
#include "type_.ClistType.h"
#include "type_.CtableType.h"
#include "type_.CtbodyType.h"
#include "type_.CalignType3.h"
#include "type_.CvalignType3.h"
#include "type_.CtrType.h"
#include "type_.CtdType.h"
#include "type_.CscopeType.h"
#include "type_.CalignType4.h"
#include "type_.CvalignType4.h"
#include "type_.CtfootType.h"
#include "type_.CalignType5.h"
#include "type_.CvalignType5.h"
#include "type_.CthType.h"
#include "type_.CscopeType2.h"
#include "type_.CalignType6.h"
#include "type_.CvalignType6.h"
#include "type_.CtheadType.h"
#include "type_.CalignType7.h"
#include "type_.CvalignType7.h"
#include "type_.CparameterCollectionType.h"
#include "type_.CauditTrailCollectionType.h"
#include "type_.CimagingPhysicalEntityCollectionType.h"
#include "type_.CcalculationEntityCollectionType.h"
#include "type_.CinferenceEntityCollectionType.h"
#include "type_.CannotationRoleEntityCollectionType.h"
#include "type_.ClesionObservationEntityCollectionType.h"
#include "type_.CimagingObservationEntityCollectionType.h"
#include "type_.CtaskContextEntityCollectionType.h"
#include "type_.CannotationOfAnnotationStatementCollectionType.h"
#include "type_.CannotationOfAnnotationsType.h"
#include "type_.CcoordinateCollectionType.h"
#include "type_.CcalculationResultCollectionType.h"
#include "type_.CdimensionCollectionType.h"
#include "type_.CcalculationDataCollectionType.h"
#include "type_.CsegmentationEntityCollectionType.h"
#include "type_.CmarkupEntityCollectionType.h"
#include "type_.CimageAnnotationStatementCollectionType.h"
#include "type_.CimageReferenceEntityCollectionType.h"
#include "type_.CimageAnnotationsType.h"
#include "type_.CimageCollectionType.h"
#include "type_.CreferencedDicomObjectCollectionType.h"
#include "type_.CcharacteristicQuantificationCollectionType.h"
#include "type_.CimagingObservationCharacteristicCollectionType.h"
#include "type_.CimagingPhysicalEntityCharacteristicCollectionType.h"
#include "type_.CimagingObservationCharacteristicCollectionType2.h"
#include "type_.CcharacteristicQuantificationCollectionType2.h"
#include "type_.CtaskContextEntityCollectionType2.h"
#include "type_.CthreeDimensionSpatialCoordinateCollectionType.h"
#include "type_.CtwoDimensionSpatialCoordinateCollectionType.h"
#include "type_.ClistTypeType.h"
#include "type_.CframeType.h"
#include "type_.CrulesType.h"
#include "type_.CalignType8.h"
#include "type_.CvalignType8.h"

// namespace "http://www.w3.org/2001/XMLSchema"
#include "type_xs.CENTITIES.h"
#include "type_xs.CENTITY.h"
#include "type_xs.CID.h"
#include "type_xs.CIDREF.h"
#include "type_xs.CIDREFS.h"
#include "type_xs.CNCName.h"
#include "type_xs.CNMTOKEN.h"
#include "type_xs.CNMTOKENS.h"
#include "type_xs.CNOTATION.h"
#include "type_xs.CName.h"
#include "type_xs.CQName.h"
#include "type_xs.CanySimpleType.h"
#include "type_xs.CanyType.h"
#include "type_xs.CanyURI.h"
#include "type_xs.Cbase64Binary.h"
#include "type_xs.Cboolean.h"
#include "type_xs.Cbyte.h"
#include "type_xs.Cdate.h"
#include "type_xs.CdateTime.h"
#include "type_xs.Cdecimal.h"
#include "type_xs.Cdouble.h"
#include "type_xs.Cduration.h"
#include "type_xs.Cfloat.h"
#include "type_xs.CgDay.h"
#include "type_xs.CgMonth.h"
#include "type_xs.CgMonthDay.h"
#include "type_xs.CgYear.h"
#include "type_xs.CgYearMonth.h"
#include "type_xs.ChexBinary.h"
#include "type_xs.Cint.h"
#include "type_xs.Cinteger.h"
#include "type_xs.Clanguage.h"
#include "type_xs.Clong.h"
#include "type_xs.CnegativeInteger.h"
#include "type_xs.CnonNegativeInteger.h"
#include "type_xs.CnonPositiveInteger.h"
#include "type_xs.CnormalizedString.h"
#include "type_xs.CpositiveInteger.h"
#include "type_xs.Cshort.h"
#include "type_xs.Cstring.h"
#include "type_xs.Ctime.h"
#include "type_xs.Ctoken.h"
#include "type_xs.CunsignedByte.h"
#include "type_xs.CunsignedInt.h"
#include "type_xs.CunsignedLong.h"
#include "type_xs.CunsignedShort.h"
#include "type_xs.CstringType.h"
#include "type_xs.Cbase64BinaryType.h"

// namespace "uri:iso.org:21090"
#include "type_iso.CAD.h"
#include "type_iso.CADXP.h"
#include "type_iso.CANY.h"
#include "type_iso.CAddressPartType.h"
#include "type_iso.CBAG_AD.h"
#include "type_iso.CBAG_BL.h"
#include "type_iso.CBAG_BL_NonNull.h"
#include "type_iso.CBAG_CD.h"
#include "type_iso.CBAG_CD_CE.h"
#include "type_iso.CBAG_CD_CE_None.h"
#include "type_iso.CBAG_CD_CV.h"
#include "type_iso.CBAG_CO.h"
#include "type_iso.CBAG_CS.h"
#include "type_iso.CBAG_ED.h"
#include "type_iso.CBAG_ED_Doc.h"
#include "type_iso.CBAG_ED_Doc_Inline.h"
#include "type_iso.CBAG_ED_Doc_Ref.h"
#include "type_iso.CBAG_ED_Image.h"
#include "type_iso.CBAG_ED_Narrative.h"
#include "type_iso.CBAG_ED_Signature.h"
#include "type_iso.CBAG_ED_Text.h"
#include "type_iso.CBAG_EN.h"
#include "type_iso.CBAG_EN_ON.h"
#include "type_iso.CBAG_EN_PN.h"
#include "type_iso.CBAG_EN_TN.h"
#include "type_iso.CBAG_II.h"
#include "type_iso.CBAG_INT.h"
#include "type_iso.CBAG_INT_NonNeg.h"
#include "type_iso.CBAG_INT_Positive.h"
#include "type_iso.CBAG_MO.h"
#include "type_iso.CBAG_PQ.h"
#include "type_iso.CBAG_PQ_Time.h"
#include "type_iso.CBAG_REAL.h"
#include "type_iso.CBAG_RTO.h"
#include "type_iso.CBAG_SC.h"
#include "type_iso.CBAG_SC_NT.h"
#include "type_iso.CBAG_ST.h"
#include "type_iso.CBAG_ST_NT.h"
#include "type_iso.CBAG_TEL.h"
#include "type_iso.CBAG_TEL_Email.h"
#include "type_iso.CBAG_TEL_Person.h"
#include "type_iso.CBAG_TEL_Phone.h"
#include "type_iso.CBAG_TEL_Url.h"
#include "type_iso.CBAG_TS.h"
#include "type_iso.CBAG_TS_Birth.h"
#include "type_iso.CBAG_TS_Date.h"
#include "type_iso.CBAG_TS_Date_Full.h"
#include "type_iso.CBAG_TS_DateTime.h"
#include "type_iso.CBAG_TS_DateTime_Full.h"
#include "type_iso.CBL.h"
#include "type_iso.CBL_NonNull.h"
#include "type_iso.CCD.h"
#include "type_iso.CCD_CE.h"
#include "type_iso.CCD_CE_None.h"
#include "type_iso.CCD_CV.h"
#include "type_iso.CCDGroup.h"
#include "type_iso.CCO.h"
#include "type_iso.CCOLL_AD.h"
#include "type_iso.CCOLL_BL.h"
#include "type_iso.CCOLL_BL_NonNull.h"
#include "type_iso.CCOLL_CD.h"
#include "type_iso.CCOLL_CD_CE.h"
#include "type_iso.CCOLL_CD_CE_None.h"
#include "type_iso.CCOLL_CD_CV.h"
#include "type_iso.CCOLL_CO.h"
#include "type_iso.CCOLL_CS.h"
#include "type_iso.CCOLL_ED.h"
#include "type_iso.CCOLL_ED_Doc.h"
#include "type_iso.CCOLL_ED_Doc_Inline.h"
#include "type_iso.CCOLL_ED_Doc_Ref.h"
#include "type_iso.CCOLL_ED_Image.h"
#include "type_iso.CCOLL_ED_Narrative.h"
#include "type_iso.CCOLL_ED_Signature.h"
#include "type_iso.CCOLL_ED_Text.h"
#include "type_iso.CCOLL_EN.h"
#include "type_iso.CCOLL_EN_ON.h"
#include "type_iso.CCOLL_EN_PN.h"
#include "type_iso.CCOLL_EN_TN.h"
#include "type_iso.CCOLL_II.h"
#include "type_iso.CCOLL_INT.h"
#include "type_iso.CCOLL_INT_NonNeg.h"
#include "type_iso.CCOLL_INT_Positive.h"
#include "type_iso.CCOLL_MO.h"
#include "type_iso.CCOLL_PQ.h"
#include "type_iso.CCOLL_PQ_Time.h"
#include "type_iso.CCOLL_REAL.h"
#include "type_iso.CCOLL_RTO.h"
#include "type_iso.CCOLL_SC.h"
#include "type_iso.CCOLL_SC_NT.h"
#include "type_iso.CCOLL_ST.h"
#include "type_iso.CCOLL_ST_NT.h"
#include "type_iso.CCOLL_TEL.h"
#include "type_iso.CCOLL_TEL_Email.h"
#include "type_iso.CCOLL_TEL_Person.h"
#include "type_iso.CCOLL_TEL_Phone.h"
#include "type_iso.CCOLL_TEL_Url.h"
#include "type_iso.CCOLL_TS.h"
#include "type_iso.CCOLL_TS_Birth.h"
#include "type_iso.CCOLL_TS_Date.h"
#include "type_iso.CCOLL_TS_Date_Full.h"
#include "type_iso.CCOLL_TS_DateTime.h"
#include "type_iso.CCOLL_TS_DateTime_Full.h"
#include "type_iso.CCR.h"
#include "type_iso.CCS.h"
#include "type_iso.CCalendarCycle.h"
#include "type_iso.CCode.h"
#include "type_iso.CCodingRationale.h"
#include "type_iso.CCompression.h"
#include "type_iso.CDSET_AD.h"
#include "type_iso.CDSET_BL.h"
#include "type_iso.CDSET_BL_NonNull.h"
#include "type_iso.CDSET_CD.h"
#include "type_iso.CDSET_CD_CE.h"
#include "type_iso.CDSET_CD_CE_None.h"
#include "type_iso.CDSET_CD_CV.h"
#include "type_iso.CDSET_CO.h"
#include "type_iso.CDSET_CS.h"
#include "type_iso.CDSET_ED.h"
#include "type_iso.CDSET_ED_Doc.h"
#include "type_iso.CDSET_ED_Doc_Inline.h"
#include "type_iso.CDSET_ED_Doc_Ref.h"
#include "type_iso.CDSET_ED_Image.h"
#include "type_iso.CDSET_ED_Narrative.h"
#include "type_iso.CDSET_ED_Signature.h"
#include "type_iso.CDSET_ED_Text.h"
#include "type_iso.CDSET_EN.h"
#include "type_iso.CDSET_EN_ON.h"
#include "type_iso.CDSET_EN_PN.h"
#include "type_iso.CDSET_EN_TN.h"
#include "type_iso.CDSET_II.h"
#include "type_iso.CDSET_INT.h"
#include "type_iso.CDSET_INT_NonNeg.h"
#include "type_iso.CDSET_INT_Positive.h"
#include "type_iso.CDSET_MO.h"
#include "type_iso.CDSET_PQ.h"
#include "type_iso.CDSET_PQ_Time.h"
#include "type_iso.CDSET_REAL.h"
#include "type_iso.CDSET_RTO.h"
#include "type_iso.CDSET_SC.h"
#include "type_iso.CDSET_SC_NT.h"
#include "type_iso.CDSET_ST.h"
#include "type_iso.CDSET_ST_NT.h"
#include "type_iso.CDSET_TEL.h"
#include "type_iso.CDSET_TEL_Email.h"
#include "type_iso.CDSET_TEL_Person.h"
#include "type_iso.CDSET_TEL_Phone.h"
#include "type_iso.CDSET_TEL_Url.h"
#include "type_iso.CDSET_TS.h"
#include "type_iso.CDSET_TS_Birth.h"
#include "type_iso.CDSET_TS_Date.h"
#include "type_iso.CDSET_TS_Date_Full.h"
#include "type_iso.CDSET_TS_DateTime.h"
#include "type_iso.CDSET_TS_DateTime_Full.h"
#include "type_iso.CED.h"
#include "type_iso.CED_Doc.h"
#include "type_iso.CED_Doc_Inline.h"
#include "type_iso.CED_Doc_Ref.h"
#include "type_iso.CED_Image.h"
#include "type_iso.CED_Narrative.h"
#include "type_iso.CED_Signature.h"
#include "type_iso.CED_Text.h"
#include "type_iso.CEIVL_TS.h"
#include "type_iso.CEIVL_TS_Birth.h"
#include "type_iso.CEIVL_TS_Date.h"
#include "type_iso.CEIVL_TS_Date_Full.h"
#include "type_iso.CEIVL_TS_DateTime.h"
#include "type_iso.CEIVL_TS_DateTime_Full.h"
#include "type_iso.CEN.h"
#include "type_iso.CEN_ON.h"
#include "type_iso.CEN_PN.h"
#include "type_iso.CEN_TN.h"
#include "type_iso.CENXP.h"
#include "type_iso.CEntityNamePartQualifier.h"
#include "type_iso.CEntityNamePartType.h"
#include "type_iso.CEntityNameUse.h"
#include "type_iso.CGLIST_CO.h"
#include "type_iso.CGLIST_INT.h"
#include "type_iso.CGLIST_INT_NonNeg.h"
#include "type_iso.CGLIST_INT_Positive.h"
#include "type_iso.CGLIST_MO.h"
#include "type_iso.CGLIST_PQ.h"
#include "type_iso.CGLIST_PQ_Time.h"
#include "type_iso.CGLIST_REAL.h"
#include "type_iso.CGLIST_RTO.h"
#include "type_iso.CGLIST_TS.h"
#include "type_iso.CGLIST_TS_Birth.h"
#include "type_iso.CGLIST_TS_Date.h"
#include "type_iso.CGLIST_TS_Date_Full.h"
#include "type_iso.CGLIST_TS_DateTime.h"
#include "type_iso.CGLIST_TS_DateTime_Full.h"
#include "type_iso.CHIST_AD.h"
#include "type_iso.CHIST_BL.h"
#include "type_iso.CHIST_BL_NonNull.h"
#include "type_iso.CHIST_CD.h"
#include "type_iso.CHIST_CD_CE.h"
#include "type_iso.CHIST_CD_CE_None.h"
#include "type_iso.CHIST_CD_CV.h"
#include "type_iso.CHIST_CO.h"
#include "type_iso.CHIST_CS.h"
#include "type_iso.CHIST_ED.h"
#include "type_iso.CHIST_ED_Doc.h"
#include "type_iso.CHIST_ED_Doc_Inline.h"
#include "type_iso.CHIST_ED_Doc_Ref.h"
#include "type_iso.CHIST_ED_Image.h"
#include "type_iso.CHIST_ED_Narrative.h"
#include "type_iso.CHIST_ED_Signature.h"
#include "type_iso.CHIST_ED_Text.h"
#include "type_iso.CHIST_EN.h"
#include "type_iso.CHIST_EN_ON.h"
#include "type_iso.CHIST_EN_PN.h"
#include "type_iso.CHIST_EN_TN.h"
#include "type_iso.CHIST_II.h"
#include "type_iso.CHIST_INT.h"
#include "type_iso.CHIST_INT_NonNeg.h"
#include "type_iso.CHIST_INT_Positive.h"
#include "type_iso.CHIST_MO.h"
#include "type_iso.CHIST_PQ.h"
#include "type_iso.CHIST_PQ_Time.h"
#include "type_iso.CHIST_REAL.h"
#include "type_iso.CHIST_RTO.h"
#include "type_iso.CHIST_SC.h"
#include "type_iso.CHIST_SC_NT.h"
#include "type_iso.CHIST_ST.h"
#include "type_iso.CHIST_ST_NT.h"
#include "type_iso.CHIST_TEL.h"
#include "type_iso.CHIST_TEL_Email.h"
#include "type_iso.CHIST_TEL_Person.h"
#include "type_iso.CHIST_TEL_Phone.h"
#include "type_iso.CHIST_TEL_Url.h"
#include "type_iso.CHIST_TS.h"
#include "type_iso.CHIST_TS_Birth.h"
#include "type_iso.CHIST_TS_Date.h"
#include "type_iso.CHIST_TS_Date_Full.h"
#include "type_iso.CHIST_TS_DateTime.h"
#include "type_iso.CHIST_TS_DateTime_Full.h"
#include "type_iso.CHXIT.h"
#include "type_iso.CII.h"
#include "type_iso.CINT.h"
#include "type_iso.CINT_NonNeg.h"
#include "type_iso.CINT_Positive.h"
#include "type_iso.CIVL_High_CO.h"
#include "type_iso.CIVL_High_INT.h"
#include "type_iso.CIVL_High_INT_NonNeg.h"
#include "type_iso.CIVL_High_INT_Positive.h"
#include "type_iso.CIVL_High_MO.h"
#include "type_iso.CIVL_High_PQ.h"
#include "type_iso.CIVL_High_PQ_Time.h"
#include "type_iso.CIVL_High_REAL.h"
#include "type_iso.CIVL_High_RTO.h"
#include "type_iso.CIVL_High_TS.h"
#include "type_iso.CIVL_High_TS_Birth.h"
#include "type_iso.CIVL_High_TS_Date.h"
#include "type_iso.CIVL_High_TS_Date_Full.h"
#include "type_iso.CIVL_High_TS_DateTime.h"
#include "type_iso.CIVL_High_TS_DateTime_Full.h"
#include "type_iso.CIVL_Low_CO.h"
#include "type_iso.CIVL_Low_INT.h"
#include "type_iso.CIVL_Low_INT_NonNeg.h"
#include "type_iso.CIVL_Low_INT_Positive.h"
#include "type_iso.CIVL_Low_MO.h"
#include "type_iso.CIVL_Low_PQ.h"
#include "type_iso.CIVL_Low_PQ_Time.h"
#include "type_iso.CIVL_Low_REAL.h"
#include "type_iso.CIVL_Low_RTO.h"
#include "type_iso.CIVL_Low_TS.h"
#include "type_iso.CIVL_Low_TS_Birth.h"
#include "type_iso.CIVL_Low_TS_Date.h"
#include "type_iso.CIVL_Low_TS_Date_Full.h"
#include "type_iso.CIVL_Low_TS_DateTime.h"
#include "type_iso.CIVL_Low_TS_DateTime_Full.h"
#include "type_iso.CIVL_Width_CO.h"
#include "type_iso.CIVL_Width_INT.h"
#include "type_iso.CIVL_Width_INT_NonNeg.h"
#include "type_iso.CIVL_Width_INT_Positive.h"
#include "type_iso.CIVL_Width_MO.h"
#include "type_iso.CIVL_Width_PQ.h"
#include "type_iso.CIVL_Width_PQ_Time.h"
#include "type_iso.CIVL_Width_REAL.h"
#include "type_iso.CIVL_Width_RTO.h"
#include "type_iso.CIVL_Width_TS.h"
#include "type_iso.CIVL_Width_TS_Birth.h"
#include "type_iso.CIVL_Width_TS_Date.h"
#include "type_iso.CIVL_Width_TS_Date_Full.h"
#include "type_iso.CIVL_Width_TS_DateTime.h"
#include "type_iso.CIVL_Width_TS_DateTime_Full.h"
#include "type_iso.CIVL_CO.h"
#include "type_iso.CIVL_INT.h"
#include "type_iso.CIVL_INT_NonNeg.h"
#include "type_iso.CIVL_INT_Positive.h"
#include "type_iso.CIVL_MO.h"
#include "type_iso.CIVL_PQ.h"
#include "type_iso.CIVL_PQ_Time.h"
#include "type_iso.CIVL_REAL.h"
#include "type_iso.CIVL_RTO.h"
#include "type_iso.CIVL_TS.h"
#include "type_iso.CIVL_TS_Birth.h"
#include "type_iso.CIVL_TS_Date.h"
#include "type_iso.CIVL_TS_Date_Full.h"
#include "type_iso.CIVL_TS_DateTime.h"
#include "type_iso.CIVL_TS_DateTime_Full.h"
#include "type_iso.CIdentifierReliability.h"
#include "type_iso.CIdentifierScope.h"
#include "type_iso.CIntegrityCheckAlgorithm.h"
#include "type_iso.CLIST_AD.h"
#include "type_iso.CLIST_BL.h"
#include "type_iso.CLIST_BL_NonNull.h"
#include "type_iso.CLIST_CD.h"
#include "type_iso.CLIST_CD_CE.h"
#include "type_iso.CLIST_CD_CE_None.h"
#include "type_iso.CLIST_CD_CV.h"
#include "type_iso.CLIST_CO.h"
#include "type_iso.CLIST_CS.h"
#include "type_iso.CLIST_ED.h"
#include "type_iso.CLIST_ED_Doc.h"
#include "type_iso.CLIST_ED_Doc_Inline.h"
#include "type_iso.CLIST_ED_Doc_Ref.h"
#include "type_iso.CLIST_ED_Image.h"
#include "type_iso.CLIST_ED_Narrative.h"
#include "type_iso.CLIST_ED_Signature.h"
#include "type_iso.CLIST_ED_Text.h"
#include "type_iso.CLIST_EN.h"
#include "type_iso.CLIST_EN_ON.h"
#include "type_iso.CLIST_EN_PN.h"
#include "type_iso.CLIST_EN_TN.h"
#include "type_iso.CLIST_II.h"
#include "type_iso.CLIST_INT.h"
#include "type_iso.CLIST_INT_NonNeg.h"
#include "type_iso.CLIST_INT_Positive.h"
#include "type_iso.CLIST_MO.h"
#include "type_iso.CLIST_PQ.h"
#include "type_iso.CLIST_PQ_Time.h"
#include "type_iso.CLIST_REAL.h"
#include "type_iso.CLIST_RTO.h"
#include "type_iso.CLIST_SC.h"
#include "type_iso.CLIST_SC_NT.h"
#include "type_iso.CLIST_ST.h"
#include "type_iso.CLIST_ST_NT.h"
#include "type_iso.CLIST_TEL.h"
#include "type_iso.CLIST_TEL_Email.h"
#include "type_iso.CLIST_TEL_Person.h"
#include "type_iso.CLIST_TEL_Phone.h"
#include "type_iso.CLIST_TEL_Url.h"
#include "type_iso.CLIST_TS.h"
#include "type_iso.CLIST_TS_Birth.h"
#include "type_iso.CLIST_TS_Date.h"
#include "type_iso.CLIST_TS_Date_Full.h"
#include "type_iso.CLIST_TS_DateTime.h"
#include "type_iso.CLIST_TS_DateTime_Full.h"
#include "type_iso.CMO.h"
#include "type_iso.CNPPD_AD.h"
#include "type_iso.CNPPD_BL.h"
#include "type_iso.CNPPD_BL_NonNull.h"
#include "type_iso.CNPPD_CD.h"
#include "type_iso.CNPPD_CD_CE.h"
#include "type_iso.CNPPD_CD_CE_None.h"
#include "type_iso.CNPPD_CD_CV.h"
#include "type_iso.CNPPD_CO.h"
#include "type_iso.CNPPD_CS.h"
#include "type_iso.CNPPD_ED.h"
#include "type_iso.CNPPD_ED_Doc.h"
#include "type_iso.CNPPD_ED_Doc_Inline.h"
#include "type_iso.CNPPD_ED_Doc_Ref.h"
#include "type_iso.CNPPD_ED_Image.h"
#include "type_iso.CNPPD_ED_Narrative.h"
#include "type_iso.CNPPD_ED_Signature.h"
#include "type_iso.CNPPD_ED_Text.h"
#include "type_iso.CNPPD_EN.h"
#include "type_iso.CNPPD_EN_ON.h"
#include "type_iso.CNPPD_EN_PN.h"
#include "type_iso.CNPPD_EN_TN.h"
#include "type_iso.CNPPD_II.h"
#include "type_iso.CNPPD_INT.h"
#include "type_iso.CNPPD_INT_NonNeg.h"
#include "type_iso.CNPPD_INT_Positive.h"
#include "type_iso.CNPPD_MO.h"
#include "type_iso.CNPPD_PQ.h"
#include "type_iso.CNPPD_PQ_Time.h"
#include "type_iso.CNPPD_REAL.h"
#include "type_iso.CNPPD_RTO.h"
#include "type_iso.CNPPD_SC.h"
#include "type_iso.CNPPD_SC_NT.h"
#include "type_iso.CNPPD_ST.h"
#include "type_iso.CNPPD_ST_NT.h"
#include "type_iso.CNPPD_TEL.h"
#include "type_iso.CNPPD_TEL_Email.h"
#include "type_iso.CNPPD_TEL_Person.h"
#include "type_iso.CNPPD_TEL_Phone.h"
#include "type_iso.CNPPD_TEL_Url.h"
#include "type_iso.CNPPD_TS.h"
#include "type_iso.CNPPD_TS_Birth.h"
#include "type_iso.CNPPD_TS_Date.h"
#include "type_iso.CNPPD_TS_Date_Full.h"
#include "type_iso.CNPPD_TS_DateTime.h"
#include "type_iso.CNPPD_TS_DateTime_Full.h"
#include "type_iso.CNarrative.h"
#include "type_iso.CNullFlavor.h"
#include "type_iso.CPIVL_TS.h"
#include "type_iso.CPIVL_TS_Birth.h"
#include "type_iso.CPIVL_TS_Date.h"
#include "type_iso.CPIVL_TS_Date_Full.h"
#include "type_iso.CPIVL_TS_DateTime.h"
#include "type_iso.CPIVL_TS_DateTime_Full.h"
#include "type_iso.CPQ.h"
#include "type_iso.CPQ_Time.h"
#include "type_iso.CPQR.h"
#include "type_iso.CPostalAddressUse.h"
#include "type_iso.CQSD_CO.h"
#include "type_iso.CQSD_INT.h"
#include "type_iso.CQSD_INT_NonNeg.h"
#include "type_iso.CQSD_INT_Positive.h"
#include "type_iso.CQSD_MO.h"
#include "type_iso.CQSD_PQ.h"
#include "type_iso.CQSD_PQ_Time.h"
#include "type_iso.CQSD_REAL.h"
#include "type_iso.CQSD_RTO.h"
#include "type_iso.CQSD_TS.h"
#include "type_iso.CQSD_TS_Birth.h"
#include "type_iso.CQSD_TS_Date.h"
#include "type_iso.CQSD_TS_Date_Full.h"
#include "type_iso.CQSD_TS_DateTime.h"
#include "type_iso.CQSD_TS_DateTime_Full.h"
#include "type_iso.CQSET_BoundedPIVL.h"
#include "type_iso.CQSET_CO.h"
#include "type_iso.CQSET_INT.h"
#include "type_iso.CQSET_INT_NonNeg.h"
#include "type_iso.CQSET_INT_Positive.h"
#include "type_iso.CQSET_MO.h"
#include "type_iso.CQSET_PQ.h"
#include "type_iso.CQSET_PQ_Time.h"
#include "type_iso.CQSET_REAL.h"
#include "type_iso.CQSET_RTO.h"
#include "type_iso.CQSET_TS.h"
#include "type_iso.CQSET_TS_Birth.h"
#include "type_iso.CQSET_TS_Date.h"
#include "type_iso.CQSET_TS_Date_Full.h"
#include "type_iso.CQSET_TS_DateTime.h"
#include "type_iso.CQSET_TS_DateTime_Full.h"
#include "type_iso.CQSI_CO.h"
#include "type_iso.CQSI_INT.h"
#include "type_iso.CQSI_INT_NonNeg.h"
#include "type_iso.CQSI_INT_Positive.h"
#include "type_iso.CQSI_MO.h"
#include "type_iso.CQSI_PQ.h"
#include "type_iso.CQSI_PQ_Time.h"
#include "type_iso.CQSI_REAL.h"
#include "type_iso.CQSI_RTO.h"
#include "type_iso.CQSI_TS.h"
#include "type_iso.CQSI_TS_Birth.h"
#include "type_iso.CQSI_TS_Date.h"
#include "type_iso.CQSI_TS_Date_Full.h"
#include "type_iso.CQSI_TS_DateTime.h"
#include "type_iso.CQSI_TS_DateTime_Full.h"
#include "type_iso.CQSP_CO.h"
#include "type_iso.CQSP_INT.h"
#include "type_iso.CQSP_INT_NonNeg.h"
#include "type_iso.CQSP_INT_Positive.h"
#include "type_iso.CQSP_MO.h"
#include "type_iso.CQSP_PQ.h"
#include "type_iso.CQSP_PQ_Time.h"
#include "type_iso.CQSP_REAL.h"
#include "type_iso.CQSP_RTO.h"
#include "type_iso.CQSP_TS.h"
#include "type_iso.CQSP_TS_Birth.h"
#include "type_iso.CQSP_TS_Date.h"
#include "type_iso.CQSP_TS_Date_Full.h"
#include "type_iso.CQSP_TS_DateTime.h"
#include "type_iso.CQSP_TS_DateTime_Full.h"
#include "type_iso.CQSS_CO.h"
#include "type_iso.CQSS_INT.h"
#include "type_iso.CQSS_INT_NonNeg.h"
#include "type_iso.CQSS_INT_Positive.h"
#include "type_iso.CQSS_MO.h"
#include "type_iso.CQSS_PQ.h"
#include "type_iso.CQSS_PQ_Time.h"
#include "type_iso.CQSS_REAL.h"
#include "type_iso.CQSS_RTO.h"
#include "type_iso.CQSS_TS.h"
#include "type_iso.CQSS_TS_Birth.h"
#include "type_iso.CQSS_TS_Date.h"
#include "type_iso.CQSS_TS_Date_Full.h"
#include "type_iso.CQSS_TS_DateTime.h"
#include "type_iso.CQSS_TS_DateTime_Full.h"
#include "type_iso.CQSU_CO.h"
#include "type_iso.CQSU_INT.h"
#include "type_iso.CQSU_INT_NonNeg.h"
#include "type_iso.CQSU_INT_Positive.h"
#include "type_iso.CQSU_MO.h"
#include "type_iso.CQSU_PQ.h"
#include "type_iso.CQSU_PQ_Time.h"
#include "type_iso.CQSU_REAL.h"
#include "type_iso.CQSU_RTO.h"
#include "type_iso.CQSU_TS.h"
#include "type_iso.CQSU_TS_Birth.h"
#include "type_iso.CQSU_TS_Date.h"
#include "type_iso.CQSU_TS_Date_Full.h"
#include "type_iso.CQSU_TS_DateTime.h"
#include "type_iso.CQSU_TS_DateTime_Full.h"
#include "type_iso.CQTY.h"
#include "type_iso.CREAL.h"
#include "type_iso.CRTO.h"
#include "type_iso.CSC.h"
#include "type_iso.CSC_NT.h"
#include "type_iso.CSLIST_CO.h"
#include "type_iso.CSLIST_INT.h"
#include "type_iso.CSLIST_INT_NonNeg.h"
#include "type_iso.CSLIST_INT_Positive.h"
#include "type_iso.CSLIST_MO.h"
#include "type_iso.CSLIST_PQ.h"
#include "type_iso.CSLIST_PQ_Time.h"
#include "type_iso.CSLIST_REAL.h"
#include "type_iso.CSLIST_RTO.h"
#include "type_iso.CSLIST_TS.h"
#include "type_iso.CSLIST_TS_Birth.h"
#include "type_iso.CSLIST_TS_Date.h"
#include "type_iso.CSLIST_TS_Date_Full.h"
#include "type_iso.CSLIST_TS_DateTime.h"
#include "type_iso.CSLIST_TS_DateTime_Full.h"
#include "type_iso.CST.h"
#include "type_iso.CST_NT.h"
#include "type_iso.CTEL.h"
#include "type_iso.CTEL_Email.h"
#include "type_iso.CTEL_Person.h"
#include "type_iso.CTEL_Phone.h"
#include "type_iso.CTEL_Url.h"
#include "type_iso.CTS.h"
#include "type_iso.CTS_Birth.h"
#include "type_iso.CTS_Date.h"
#include "type_iso.CTS_Date_Full.h"
#include "type_iso.CTS_DateTime.h"
#include "type_iso.CTS_DateTime_Full.h"
#include "type_iso.CTelecommunicationAddressUse.h"
#include "type_iso.CTimingEvent.h"
#include "type_iso.CURL.h"
#include "type_iso.CUVP_AD.h"
#include "type_iso.CUVP_BL.h"
#include "type_iso.CUVP_BL_NonNull.h"
#include "type_iso.CUVP_CD.h"
#include "type_iso.CUVP_CD_CE.h"
#include "type_iso.CUVP_CD_CE_None.h"
#include "type_iso.CUVP_CD_CV.h"
#include "type_iso.CUVP_CO.h"
#include "type_iso.CUVP_CS.h"
#include "type_iso.CUVP_ED.h"
#include "type_iso.CUVP_ED_Doc.h"
#include "type_iso.CUVP_ED_Doc_Inline.h"
#include "type_iso.CUVP_ED_Doc_Ref.h"
#include "type_iso.CUVP_ED_Image.h"
#include "type_iso.CUVP_ED_Narrative.h"
#include "type_iso.CUVP_ED_Signature.h"
#include "type_iso.CUVP_ED_Text.h"
#include "type_iso.CUVP_EN.h"
#include "type_iso.CUVP_EN_ON.h"
#include "type_iso.CUVP_EN_PN.h"
#include "type_iso.CUVP_EN_TN.h"
#include "type_iso.CUVP_II.h"
#include "type_iso.CUVP_INT.h"
#include "type_iso.CUVP_INT_NonNeg.h"
#include "type_iso.CUVP_INT_Positive.h"
#include "type_iso.CUVP_MO.h"
#include "type_iso.CUVP_PQ.h"
#include "type_iso.CUVP_PQ_Time.h"
#include "type_iso.CUVP_REAL.h"
#include "type_iso.CUVP_RTO.h"
#include "type_iso.CUVP_SC.h"
#include "type_iso.CUVP_SC_NT.h"
#include "type_iso.CUVP_ST.h"
#include "type_iso.CUVP_ST_NT.h"
#include "type_iso.CUVP_TEL.h"
#include "type_iso.CUVP_TEL_Email.h"
#include "type_iso.CUVP_TEL_Person.h"
#include "type_iso.CUVP_TEL_Phone.h"
#include "type_iso.CUVP_TEL_Url.h"
#include "type_iso.CUVP_TS.h"
#include "type_iso.CUVP_TS_Birth.h"
#include "type_iso.CUVP_TS_Date.h"
#include "type_iso.CUVP_TS_Date_Full.h"
#include "type_iso.CUVP_TS_DateTime.h"
#include "type_iso.CUVP_TS_DateTime_Full.h"
#include "type_iso.CUid.h"
#include "type_iso.CUncertaintyType.h"
#include "type_iso.CUpdateMode.h"
#include "type_iso.CUri.h"
#include "type_iso.CXReference.h"
#include "type_iso.Cset_CodingRationale.h"
#include "type_iso.Cset_EntityNamePartQualifier.h"
#include "type_iso.Cset_EntityNameUse.h"
#include "type_iso.Cset_PostalAddressUse.h"
#include "type_iso.Cset_TelecommunicationAddressUse.h"

// finished

#endif //_INCLUDED_AIMXML_H_
