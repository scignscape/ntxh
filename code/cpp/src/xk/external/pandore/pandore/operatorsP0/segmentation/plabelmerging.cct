/* -*- mode: c++; c-basic-offset: 3 -*-
 *
 * Copyright (c), GREYC.
 * All rights reserved
 *
 * You may use this file under the terms of the BSD license as follows:
 *
 * "Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *   * Neither the name of the GREYC, nor the name of its
 *     contributors may be used to endorse or promote products
 *     derived from this software without specific prior written
 *     permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
 *
 * 
 * For more information, refer to:
 * https://clouard.users.greyc.fr/Pandore
 */

/**
 * @author Francois Angot - 1997-11-06
 * @author Regis Clouard - 2002-07-11 (region + graphe)
 */

#include <pandore.h>
using namespace pandore;

/**
 * @file plabelmerging.cpp
 * Fusion elementaire de 2 régions.
 */

/*
 * Pour les régions, la région résultante conserve le numero r1.
 * Pour le graphe, les coordonnées du nouveau sommet sont placées
 * au milieu des 2 sommets fusionnés.
 * La liste des voisins de chacun des sommets est fusionnée dans le nouveau.
 * Les valeurs de Item() est celle du premier sommet.
 */
##begin PLABELMERGING < TIN0, TIN1, LOOPP, POINT >
Errc PLabelMerging( const TIN0 &rgs, const TIN1 &grs, TIN0 &rgd, TIN1 &grd, TIN0::ValueType r1, TIN0::ValueType r2 ) {
   POINT p;
   
   if (r1 == r2 || r1 > (Ulong)rgs.Labels() || r2 > (Ulong)rgs.Labels()) {
      std::cerr << "Error plabelmerging: Bad label number:" << r1 << ","<< r2<< std::endl;
      return FAILURE;
   }
   rgd = rgs;

##LOOPP(rgs,p)
   if (rgs[p] == r2) {
      rgd[p] = r1;
   }
   
   grd = grs;
   
   if ((r1 != r2) && grd[r1] && grd[r2]) {
      grd[r1]->seed = (grs[r1]->seed + grs[r2]->seed) / 2;
   } else {
      std::cerr << "Error plabelmerging: Bad label number:" << r1 << "," << r2 << std::endl;
      return FAILURE;
   }
   
   if (!grd.Merge(r1, r2)) {
      std::cerr << "Error plabelmerging: Bad label number:" << r1 << ","<< r2 << std::endl;
      return FAILURE;
   }
   return SUCCESS;
}

##append loadcases
// verifier toutes les entrees
   if (objs[0]->Type() == Po_$TIN0 && objs[1]->Type() == Po_$TIN1) {
      TIN0* const rgs = (TIN0*)objs[0];
      TIN1* const grs = (TIN1*)objs[1];  
      objd[0] = new TIN0(rgs->Size());
      TIN0* const rgd = (TIN0*)objd[0];
      objd[1] = new TIN1(grs->Size());
      TIN1* const grd = (TIN1*)objd[1];
      
      result = PLabelMerging(*rgs, *grs, *rgd, *grd, (TIN0::ValueType)atof(parv[0]), (TIN0::ValueType)atof(parv[1]));
      goto end;
   }
## end
##end

##forall(PLABELMERGING, /Reg2d/, /Graph2d/)
##forall(PLABELMERGING, /Reg3d/, /Graph3d/)

#ifdef MAIN
/*
 * Modify only the following constants, and the operator switches.
 */
#define	USAGE	"usage: %s label1 label2 [rg_in|-] [gr_in|-] [rg_out|-] [gr_out|-]"
#define	PARC	2
#define	FINC	2
#define	FOUTC	2
#define	MASK	0

##main(PARC, FINC, FOUTC, MASK, USAGE)
#endif
