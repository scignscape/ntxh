
`copy<@/ctg/ngml/gen>;


`p.
The question of whether computers can be programmed to understand 
language may be philosophical, but it overlaps with 
broad methodological bifurcations: after all, linguists 
`i.are` programming computers to `q.understand` language, at 
least to some approximation.  Given that computational 
linguistics is now a well-established practice, we can 
consider how this program for investigating the nature of 
language orients into linguistics as a whole: to what degree 
are the computers really `q.understanding` their linguistic 
input?  How much does `i.behavior` consistent with language-understanding 
suggest actual understanding?  Is linguistic competence mostly a 
behavioral phenomenon, or something more holistic and (inter-) subjective?  
Are the imperfections of automated Natural Language Processing 
inevitable, and if so, does that foreclose the possibility of 
`NLP; engines being considered truly linguistic?  That is, 
should we treat flawed and oversimplistic (but practically useful) 
`NLP; software %-- or `q.personas` driven by this software, like 
`q.digital assistants` %-- as bonafide (if rather primitive) 
participants in the world of human language?  Or are they merely 
machines that simulate linguistic behavior without manifesting 
real linguistic behavior, as a computer simulation of a 
celestial galaxy is not a real galaxy?  
`p`


